// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
	
	static Array kbd;
    /** Initializes the keyboard. */
    function void init() {
		let kbd = 24576;
		return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		return kbd[0];
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var char ch;		
		//do Output.printChar(32);
		//do Output.backspace();
		let ch = 0;
		while (ch = 0) { let ch = Keyboard.keyPressed(); }
		while (~(Keyboard.keyPressed() = 0)) {}
		do Output.printChar(ch);		
		return ch;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var String str;
		var char ch;
		let str = String.new(64);

		do Output.printString(message);
		while (true) {
			let ch = Keyboard.readChar();		
			if (ch = String.newLine()) {
				do Output.println();
				return str;
			} else {
				if (ch = String.backSpace()) {
					if (str.length() > 0) {
						do str.eraseLastChar();
					}				
				} else {
					let str = str.appendChar(ch);
				}		
			}
		}

		return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var String s;
		let s = Keyboard.readLine(message);
		return s.intValue();
    }
}
