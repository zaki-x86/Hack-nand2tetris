// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	// In
	DMux8Way(in=load, 
			 sel=address, 
			 a=load0,
			 b=load1,
			 c=load2,
			 d=load3,
			 e=load4,
			 f=load5,
			 g=load6,
			 h=load7);
			 
	Register(in=in, load=load0, out=addr0);
	Register(in=in, load=load1, out=addr1);
	Register(in=in, load=load2, out=addr2);
	Register(in=in, load=load3, out=addr3);
	Register(in=in, load=load4, out=addr4);
	Register(in=in, load=load5, out=addr5);
	Register(in=in, load=load6, out=addr6);
	Register(in=in, load=load7, out=addr7);
	
	// Out
    Mux8Way16(a=addr0, 
	          b=addr1, 
			  c=addr2, 
			  d=addr3, 
			  e=addr4, 
			  f=addr5, 
			  g=addr6, 
			  h=addr7,
			  sel=address,
			  out=out);
}